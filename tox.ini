[tox]
envlist = {ansible2.2}-{xenial-conf-tests,xenial-mon-osd,xenial-cluster,centos7-mon-osd,centos7-cluster}
skipsdist = True

[testenv]
whitelist_externals =
    vagrant
    bash
passenv=*
setenv=
  ANSIBLE_SSH_ARGS = -F {changedir}/vagrant_ssh_config
  ANSIBLE_ACTION_PLUGINS = {toxinidir}/plugins/actions
deps=
  ansible1.9: ansible==1.9.4
  ansible2.1: ansible==2.1
  ansible2.2: ansible==2.2
  -r{toxinidir}/tests/requirements.txt
changedir=
  # test a 3 mon cluster and ensures ceph.conf is rendered correctly
  xenial-conf-tests: {toxinidir}/tests/functional/ubuntu/16.04/mon
  # tests a 1 mon 1 osd xenial cluster using raw_multi_journal OSD scenario
  xenial-mon-osd: {toxinidir}/tests/functional/ubuntu/16.04/mon-osd
  # tests a 1 mon, 1 osd, 1 mds and 1 rgw xenial cluster using journal_collocation OSD scenario
  xenial-cluster: {toxinidir}/tests/functional/ubuntu/16.04/mon-osd-mds-rgw
  # tests a 1 mon 1 osd centos7 cluster using raw_multi_journal OSD scenario
  centos7-mon-osd: {toxinidir}/tests/functional/centos/7/mon-osd
  # tests a 1 mon, 1 osd, 1 mds and 1 rgw centos7 cluster using journal_collocation OSD scenario
  centos7-cluster: {toxinidir}/tests/functional/centos/7/mon-osd-mds-rgw
commands=
  vagrant up --no-provision {posargs:--provider=virtualbox}
  bash {toxinidir}/tests/scripts/generate_ssh_config.sh {changedir}

  ansible-playbook -vv -i {changedir}/hosts {toxinidir}/site.yml.sample --extra-vars="fetch_directory={changedir}/fetch"

  py.test -v
  vagrant destroy --force
